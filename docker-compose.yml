version: '3.8'

services:
  users_core_db:
    image: postgres:15-alpine
    container_name: users_core_db
    environment:
      - POSTGRES_DB=users_core_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d users_core_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  chats_db:
    image: postgres:15-alpine
    container_name: chats_db
    environment:
      - POSTGRES_DB=chats_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    ports:
      - "5433:5432"
    volumes:
      - chats_postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d chats_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  users:
    build:
      context: .
      dockerfile: users/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=users_core_db
      - DB_PORT=5432
      - DB_NAME=users_core_db
      - DB_USER=postgres
      - DB_PASSWORD=1234
    depends_on:
      - users_core_db
    networks:
      - app-network

  core:
    build:
      context: .
      dockerfile: core/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=users_core_db
      - DB_PORT=5432
      - DB_NAME=users_core_db
      - DB_USER=postgres
      - DB_PASSWORD=1234
    depends_on:
      - users_core_db
      - users
    networks:
      - app-network

  chats:
    build:
      context: .
      dockerfile: chats/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=chats_db
      - DB_PORT=5432
      - DB_NAME=chats_db
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - chats_db
      - redis
      - users
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  chats_postgres_data:
