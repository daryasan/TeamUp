version: '3.8'

services:
  core_db:
    image: postgres:15-alpine
    container_name: postgres-core-db
    environment:
      - POSTGRES_DB=teamup_users_core
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - app-network

  chats_db:
    image: postgres:15-alpine
    container_name: postgres-chats-db
    environment:
      - POSTGRES_DB=teamup_chats
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
    ports:
      - "5433:5432"
    volumes:
      - chats_postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis-server
    ports:
      - "6379:6379"
    networks:
      - app-network

  users:
    build:
      context: .
      dockerfile: users/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=teamup_users_core
      - DB_USER=postgres
      - DB_PASSWORD=1234
    depends_on:
      - core_db
    networks:
      - app-network

  core:
    build:
      context: .
      dockerfile: core/Dockerfile
    ports:
      - "8081:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=teamup_users_core
      - DB_USER=postgres
      - DB_PASSWORD=1234
    depends_on:
      - core_db
      - users
    networks:
      - app-network

  chats:
    build:
      context: .
      dockerfile: chats/Dockerfile
    ports:
      - "8082:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=chats_db
      - DB_PORT=5432
      - DB_NAME=teamup_chats
      - DB_USER=postgres
      - DB_PASSWORD=1234
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - chats_db
      - redis
      - users
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  chats_postgres_data: