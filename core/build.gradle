plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'org.example'
version = 'unspecified'

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs << '-parameters'
}

configurations.configureEach {
    resolutionStrategy {
        force 'org.apache.commons:commons-compress:1.26.2'
    }
}

configurations.configureEach {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'org.apache.commons' &&
                details.requested.name == 'commons-compress') {
            details.useVersion '1.26.2'
            details.because "Необходимо использовать версию 1.26.2, а не транзитивную 1.21"
        }
    }
}


bootJar {
    mainClass.set("org.example.CoreApp")
}

dependencies {
    implementation platform('org.springframework.boot:spring-boot-dependencies:3.3.3')
    implementation 'ch.qos.logback:logback-classic:1.5.16'
    implementation 'ch.qos.logback:logback-core:1.5.16'

    implementation 'org.apache.commons:commons-compress:1.26.2'

    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    implementation 'ch.qos.logback:logback-classic:1.5.16'
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation 'org.springframework.boot:spring-boot-starter-logging'


    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.1'

    testImplementation 'org.springframework.security:spring-security-test:6.3.3'

    implementation "io.jsonwebtoken:jjwt-api:0.12.3"
    implementation "io.jsonwebtoken:jjwt-impl:0.12.3"
    implementation "io.jsonwebtoken:jjwt-jackson:0.12.3"
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.3'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    testImplementation 'org.assertj:assertj-core:3.25.3'

    implementation("software.amazon.awssdk:aws-sdk-java:2.29.33")
    implementation("software.amazon.awssdk:apache-client:2.29.33")
}

test {
    useJUnitPlatform()
}

